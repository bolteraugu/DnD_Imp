{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\August Bolter\\\\WebstormProjects\\\\DnDProject\\\\src\\\\screens\\\\ForgotPasswordScreen.js\";\nimport { Button, IconButton, Title, TextInput, Text } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useContext, useState } from 'react';\nimport { AuthUserContext } from \"../navigation/AuthUserProvider\";\nexport default function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthUserContext),\n      forgotPassword = _useContext.forgotPassword;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Forgot Password\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Please submit your account's email so a password reset link can be sent to it.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    value: email,\n    style: styles.input,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(userEmail) {\n      return setEmail(userEmail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(IconButton, {\n    icon: \"keyboard-backspace\",\n    size: 30,\n    color: \"#6646ee\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.button,\n    onPress: function onPress() {\n      forgotPassword(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 15\n  },\n  container: {\n    alignSelf: 'center',\n    marginTop: 200,\n    width: 500\n  },\n  input: {\n    marginTop: 10\n  },\n  button: {\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/August Bolter/WebstormProjects/DnDProject/src/screens/ForgotPasswordScreen.js"],"names":["Button","IconButton","Title","TextInput","Text","React","useContext","useState","AuthUserContext","ForgotPasswordScreen","navigation","forgotPassword","email","setEmail","styles","container","input","userEmail","row","goBack","button","StyleSheet","create","flexDirection","marginTop","alignSelf","width","justifyContent"],"mappings":";;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,IAA9C,QAAyD,oBAAzD;;;AAEA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,eAAR;AAEA,eAAe,SAASC,oBAAT,OAA4C;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACzD,oBAAyBJ,UAAU,CAACE,eAAD,CAAnC;AAAA,MAAOG,cAAP,eAAOA,cAAP;;AACA,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAFF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAEH,KAFT;AAGE,IAAA,KAAK,EAAEE,MAAM,CAACE,KAHhB;AAIE,IAAA,cAAc,EAAC,MAJjB;AAKE,IAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,aAAeJ,QAAQ,CAACI,SAAD,CAAvB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACS,MAAX,EAAN;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAEL,MAAM,CAACM,MAFhB;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbT,MAAAA,cAAc,CAACC,KAAD,CAAd;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAbF,CADF;AAiCD;AAED,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,GAAG,EAAE;AAEHK,IAAAA,aAAa,EAAE,KAFZ;AAGHC,IAAAA,SAAS,EAAE;AAHR,GAD0B;AAM/BT,EAAAA,SAAS,EAAE;AAETU,IAAAA,SAAS,EAAE,QAFF;AAGTD,IAAAA,SAAS,EAAE,GAHF;AAITE,IAAAA,KAAK,EAAE;AAJE,GANoB;AAY/BV,EAAAA,KAAK,EAAE;AACLQ,IAAAA,SAAS,EAAE;AADN,GAZwB;AAe/BJ,EAAAA,MAAM,EAAE;AACNO,IAAAA,cAAc,EAAE;AADV;AAfuB,CAAlB,CAAf","sourcesContent":["import {Button, IconButton, Title, TextInput, Text} from 'react-native-paper';\nimport {StyleSheet, View} from 'react-native';\nimport React, {useContext, useState} from 'react';\nimport {AuthUserContext} from '../navigation/AuthUserProvider';\n\nexport default function ForgotPasswordScreen({navigation}) {\n  const {forgotPassword} = useContext(AuthUserContext);\n  const [email, setEmail] = useState('');\n  return (\n    <View style={styles.container}>\n      <Title>Forgot Password</Title>\n      <Text>\n        Please submit your account's email so a password reset link can be sent\n        to it.\n      </Text>\n      <TextInput\n        label=\"Email\" // Label of the text input\n        value={email} // The value of the text input should be the email variable as the email variable will always be set as soon as onChangeText is called\n        style={styles.input} // The style of the text input (which is just setting the margin to 5)\n        autoCapitalize=\"none\" // Don't auto captalise the input. Important considering email's usually aren't captalised and are quite specific\n        onChangeText={(userEmail) => setEmail(userEmail)} // userEmail is the new text when the text is changed, set email to this. Then value will be changed too.\n      />\n      <View style={styles.row}>\n        <IconButton\n          icon=\"keyboard-backspace\" //Getting the back icon image\n          size={30} //Setting the size\n          color=\"#6646ee\" //And the color\n          onPress={() => navigation.goBack()} //When clicked on make it go back to the previous route\n        />\n        <Button\n          mode=\"contained\"\n          style={styles.button}\n          onPress={() => {\n            forgotPassword(email);\n          }}\n        >\n          Submit\n        </Button>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    //This is why the back button and the submit button are on the same row.\n    flexDirection: 'row',\n    marginTop: 15,\n  },\n  container: {\n    //Aligns the content on this screen to the center, sets the content 200 from the top and sets the width of it to 500\n    alignSelf: 'center',\n    marginTop: 200,\n    width: 500,\n  },\n  input: {\n    marginTop: 10,\n  },\n  button: {\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}