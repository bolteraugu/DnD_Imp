{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\August Bolter\\\\WebstormProjects\\\\DnDProject\\\\src\\\\screens\\\\LoginScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Title, TextInput, Button, Text, IconButton } from 'react-native-paper';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { AuthUserContext } from \"../navigation/AuthUserProvider\";\nimport { Checkbox } from 'react-native-paper';\nimport { appleAuth } from '@invertase/react-native-apple-authentication';\nimport colors from \"../utils/colors\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rememberMe = _useState6[0],\n      setRememberMe = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordVisible = _useState8[0],\n      setPasswordVisible = _useState8[1];\n\n  var _useContext = useContext(AuthUserContext),\n      login = _useContext.login;\n\n  var _useContext2 = useContext(AuthUserContext),\n      onAppleButtonPress = _useContext2.onAppleButtonPress;\n\n  var _useContext3 = useContext(AuthUserContext),\n      onAndroidAppleButtonPress = _useContext3.onAndroidAppleButtonPress;\n\n  var _useContext4 = useContext(AuthUserContext),\n      onFacebookButtonPress = _useContext4.onFacebookButtonPress;\n\n  var _useContext5 = useContext(AuthUserContext),\n      onGoogleButtonPress = _useContext5.onGoogleButtonPress;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Welcome to Dungeon Minion 5e\"), React.createElement(TextInput, {\n    label: \"Email\",\n    value: email,\n    keyboardType: \"email-address\",\n    style: styles.input,\n    onChangeText: function onChangeText(userEmail) {\n      return setEmail(userEmail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.passwordContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.passwordField,\n    label: \"Password\",\n    value: password,\n    secureTextEntry: !passwordVisible,\n    onChangeText: function onChangeText(userPassword) {\n      return setPassword(userPassword);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(IconButton, {\n    style: styles.visibilityIcon,\n    icon: passwordVisible ? 'eye-off' : 'eye',\n    size: 20,\n    color: \"#000000\",\n    onPress: function onPress() {\n      setPasswordVisible(!passwordVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.checkboxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.checkboxText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Remember Me\"), React.createElement(Checkbox, {\n    status: rememberMe ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setRememberMe(!rememberMe);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPassword');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgotPasswordButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \" Forgot Password? \"))), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.button,\n    onPress: function onPress() {\n      return login(email, password, rememberMe);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(Button, {\n    style: styles.googleSignInButton,\n    color: \"#000000\",\n    onPress: function onPress() {\n      onGoogleButtonPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Login with Google\"), React.createElement(IconButton, {\n    style: styles.googleIcon,\n    icon: \"google\",\n    size: 28,\n    color: \"#000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    style: styles.appleSignInButton,\n    color: colors.white,\n    onPress: function onPress() {\n      if (appleAuth.isSupported) {\n        onAppleButtonPress({\n          rememberMe: rememberMe\n        });\n      } else {\n        onAndroidAppleButtonPress({\n          rememberMe: rememberMe\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Login with Apple\"), React.createElement(IconButton, {\n    style: styles.appleIcon,\n    icon: \"apple\",\n    size: 28,\n    color: \"#ffffff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.facebookContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    style: styles.facebookButton,\n    color: \"#000000\",\n    mode: \"contained\",\n    onPress: function onPress() {\n      onFacebookButtonPress({\n        rememberMe: rememberMe\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Login with Facebook\"), React.createElement(IconButton, {\n    style: styles.facebookIcon,\n    icon: \"facebook\",\n    size: 28,\n    color: \"#ffffff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Register\"));\n}\nvar styles = StyleSheet.create({\n  facebookButton: {\n    width: '98%',\n    margin: 5,\n    height: 45,\n    backgroundColor: '#3260a8'\n  },\n  facebookContainer: {\n    flexDirection: 'row'\n  },\n  appleSignInButton: {\n    width: '98%',\n    height: 45,\n    margin: 5,\n    backgroundColor: '#000000'\n  },\n  googleSignInButton: {\n    width: '98%',\n    height: 45,\n    margin: 5,\n    backgroundColor: '#2bc26a'\n  },\n  forgotPasswordButton: {\n    marginLeft: 6,\n    marginTop: 6,\n    fontSize: 14,\n    color: '#6231de'\n  },\n  passwordContainer: {\n    justifyContent: 'center',\n    height: 60,\n    margin: 5\n  },\n  passwordField: {\n    height: 60\n  },\n  visibilityIcon: {\n    position: 'absolute',\n    right: 10\n  },\n  googleIcon: {\n    position: 'absolute',\n    right: 10,\n    top: 263\n  },\n  appleIcon: {\n    position: 'absolute',\n    right: 10,\n    top: 316\n  },\n  facebookIcon: {\n    position: 'absolute',\n    right: 10,\n    elevation: 2\n  },\n  checkboxContainer: {\n    flexDirection: 'row'\n  },\n  checkboxText: {\n    marginTop: 6,\n    marginLeft: 6\n  },\n  button: {\n    margin: 5\n  },\n  container: {\n    alignSelf: 'center',\n    marginTop: 200,\n    width: 500\n  },\n  input: {\n    height: 60,\n    margin: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/August Bolter/WebstormProjects/DnDProject/src/screens/LoginScreen.js"],"names":["React","useState","useContext","Title","TextInput","Button","Text","IconButton","AuthUserContext","Checkbox","appleAuth","colors","LoginScreen","navigation","email","setEmail","password","setPassword","rememberMe","setRememberMe","passwordVisible","setPasswordVisible","login","onAppleButtonPress","onAndroidAppleButtonPress","onFacebookButtonPress","onGoogleButtonPress","styles","container","titleText","input","userEmail","passwordContainer","passwordField","userPassword","visibilityIcon","checkboxContainer","checkboxText","navigate","forgotPasswordButton","button","googleSignInButton","googleIcon","appleSignInButton","white","isSupported","appleIcon","facebookContainer","facebookButton","facebookIcon","StyleSheet","create","width","margin","height","backgroundColor","flexDirection","marginLeft","marginTop","fontSize","color","justifyContent","position","right","top","elevation","alignSelf"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Title, TextInput, Button, Text, IconButton} from 'react-native-paper';\nimport {TouchableWithoutFeedback} from 'react-native';\nimport {AuthUserContext} from '../navigation/AuthUserProvider';\nimport {Checkbox} from 'react-native-paper';\nimport {appleAuth} from '@invertase/react-native-apple-authentication';\nimport colors from '../utils/colors';\n\nexport default function LoginScreen({navigation}) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const {login} = useContext(AuthUserContext);\n  const {onAppleButtonPress} = useContext(AuthUserContext);\n  const {onAndroidAppleButtonPress} = useContext(AuthUserContext);\n  const {onFacebookButtonPress} = useContext(AuthUserContext);\n  const {onGoogleButtonPress} = useContext(AuthUserContext);\n\n  //Got help for checkbox code from here: https://callstack.github.io/react-native-paper/checkbox.html\n\n  return (\n    <View style={styles.container}>\n      <Title style={styles.titleText}>Welcome to Dungeon Minion 5e</Title>\n      <TextInput\n        label=\"Email\"\n        value={email}\n        keyboardType=\"email-address\"\n        style={styles.input}\n        onChangeText={(userEmail) => setEmail(userEmail)}\n      />\n      <View style={styles.passwordContainer}>\n        <TextInput\n          style={styles.passwordField}\n          label=\"Password\"\n          value={password}\n          secureTextEntry={!passwordVisible}\n          onChangeText={(userPassword) => setPassword(userPassword)}\n        />\n        <IconButton\n          style={styles.visibilityIcon}\n          icon={passwordVisible ? 'eye-off' : 'eye'}\n          size={20}\n          color=\"#000000\"\n          onPress={() => {\n            setPasswordVisible(!passwordVisible);\n          }}\n        />\n      </View>\n      <View style={styles.checkboxContainer}>\n        <Text style={styles.checkboxText}>Remember Me</Text>\n        <Checkbox\n          status={rememberMe ? 'checked' : 'unchecked'}\n          onPress={() => {\n            setRememberMe(!rememberMe);\n          }}\n        />\n        <TouchableWithoutFeedback\n          onPress={() => navigation.navigate('ForgotPassword')}\n        >\n          <Text style={styles.forgotPasswordButton}> Forgot Password? </Text>\n        </TouchableWithoutFeedback>\n      </View>\n      <Button\n        mode=\"contained\"\n        style={styles.button}\n        onPress={() => login(email, password, rememberMe)}\n      >\n        Login\n      </Button>\n      <Button\n        style={styles.googleSignInButton}\n        color=\"#000000\"\n        onPress={() => {\n          onGoogleButtonPress();\n        }}\n      >\n        Login with Google\n      </Button>\n      <IconButton\n        style={styles.googleIcon}\n        icon=\"google\"\n        size={28}\n        color=\"#000000\"\n      />\n      <Button\n        style={styles.appleSignInButton}\n        color={colors.white}\n        onPress={() => {\n          if (appleAuth.isSupported) {\n            onAppleButtonPress({rememberMe});\n          } else {\n            onAndroidAppleButtonPress({rememberMe});\n          }\n        }}\n      >\n        Login with Apple\n      </Button>\n      <IconButton\n        style={styles.appleIcon}\n        icon=\"apple\"\n        size={28}\n        color=\"#ffffff\"\n      />\n      <View style={styles.facebookContainer}>\n        <Button\n          style={styles.facebookButton}\n          color=\"#000000\"\n          mode=\"contained\"\n          onPress={() => {\n            onFacebookButtonPress({rememberMe});\n          }}\n        >\n          Login with Facebook\n        </Button>\n        <IconButton\n          style={styles.facebookIcon}\n          icon=\"facebook\"\n          size={28}\n          color=\"#ffffff\"\n        />\n      </View>\n      <Button\n        mode=\"contained\"\n        style={styles.button}\n        onPress={() => navigation.navigate('Register')}\n      >\n        Register\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  facebookButton: {\n    width: '98%',\n    margin: 5,\n    height: 45,\n    backgroundColor: '#3260a8',\n  },\n\n  facebookContainer: {\n    flexDirection: 'row',\n  },\n\n  appleSignInButton: {\n    width: '98%',\n    height: 45,\n    margin: 5,\n    backgroundColor: '#000000',\n  },\n\n  googleSignInButton: {\n    width: '98%',\n    height: 45,\n    margin: 5,\n    backgroundColor: '#2bc26a',\n  },\n\n  forgotPasswordButton: {\n    marginLeft: 6,\n    marginTop: 6,\n    fontSize: 14,\n    color: '#6231de',\n  },\n\n  passwordContainer: {\n    justifyContent: 'center',\n    height: 60,\n    margin: 5,\n  },\n\n  passwordField: {\n    height: 60,\n  },\n\n  visibilityIcon: {\n    position: 'absolute',\n    right: 10,\n  },\n\n  googleIcon: {\n    position: 'absolute',\n    right: 10,\n    top: 263,\n  },\n\n  appleIcon: {\n    position: 'absolute',\n    right: 10,\n    top: 316,\n  },\n\n  facebookIcon: {\n    position: 'absolute',\n    right: 10,\n    elevation: 2,\n  },\n\n  checkboxContainer: {\n    flexDirection: 'row',\n  },\n\n  checkboxText: {\n    marginTop: 6,\n    marginLeft: 6,\n  },\n\n  button: {\n    margin: 5,\n  },\n  container: {\n    alignSelf: 'center',\n    marginTop: 200,\n    width: 500,\n  },\n  input: {\n    height: 60,\n    margin: 5,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}