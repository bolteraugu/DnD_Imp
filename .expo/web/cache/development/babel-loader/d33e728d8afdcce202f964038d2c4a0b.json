{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\August Bolter\\\\WebstormProjects\\\\DnDProject\\\\src\\\\screens\\\\AddGroupScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Title, TextInput, Button } from 'react-native-paper';\nimport { AuthUserContext } from \"../navigation/AuthUserProvider\";\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nexport default function AddGroupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      groupName = _useState2[0],\n      setGroupName = _useState2[1];\n\n  var _useContext = useContext(AuthUserContext),\n      user = _useContext.user;\n\n  function handleButtonPress() {\n    if (groupName.length > 0) {\n      firebase.firestore().collection('groups').add({\n        name: groupName,\n        members: [user.toJSON().email],\n        numMembers: 1\n      }).then(function (docRef) {\n        docRef.collection('messages').add({\n          text: \"You have joined the group \" + groupName + \".\",\n          createdAt: new Date().toString()\n        });\n        firebase.firestore().collection('group-logs').doc(docRef.id).set({\n          groupName: groupName\n        }).then(function () {\n          firebase.firestore().collection('group-logs').doc(docRef.id).collection('logs').add({\n            text: \"The group has been created by \" + user.toJSON().email + \".\",\n            createdAt: new Date().toString()\n          });\n        }).then(navigation.navigate('Home'));\n      }, function (error) {\n        alert(error);\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.rootContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.innerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Create a new group\"), React.createElement(TextInput, {\n    name: \"Group Name\",\n    value: groupName,\n    onChangeText: function onChangeText(text) {\n      return setGroupName(text);\n    },\n    clearButtonMode: \"while-editing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.buttonContainer,\n    onPress: function onPress() {\n      return handleButtonPress();\n    },\n    disabled: groupName.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Create\")));\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    marginTop: 5\n  },\n  innerContainer: {\n    justifyContent: 'center',\n    width: 500\n  },\n  rootContainer: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/August Bolter/WebstormProjects/DnDProject/src/screens/AddGroupScreen.js"],"names":["React","useState","useContext","Title","TextInput","Button","AuthUserContext","firebase","AddGroupScreen","navigation","groupName","setGroupName","user","handleButtonPress","length","firestore","collection","add","name","members","toJSON","email","numMembers","then","docRef","text","createdAt","Date","toString","doc","id","set","navigate","error","alert","styles","rootContainer","innerContainer","buttonContainer","StyleSheet","create","marginTop","justifyContent","width","flexDirection","flex"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Title, TextInput, Button} from 'react-native-paper';\nimport {AuthUserContext} from '../navigation/AuthUserProvider';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\n/**\n * This screen has a text input for users to create a new group that they are the only member of.\n * @param {*} param0\n */\nexport default function AddGroupScreen({navigation}) {\n  const [groupName, setGroupName] = useState('');\n  const {user} = useContext(AuthUserContext);\n  /**\n   * Create a new Firestore collection to save threads\n   */\n  function handleButtonPress() {\n    if (groupName.length > 0) {\n      firebase\n        .firestore()\n        .collection('groups')\n        .add({\n          name: groupName,\n          members: [user.toJSON().email],\n          numMembers: 1,\n        })\n        .then(\n          (docRef) => {\n            docRef.collection('messages').add({\n              text: `You have joined the group ${groupName}.`,\n              createdAt: new Date().toString(),\n            });\n\n            firebase\n              .firestore()\n              .collection('group-logs')\n              .doc(docRef.id)\n              .set({\n                groupName: groupName,\n              })\n              .then(() => {\n                firebase\n                  .firestore()\n                  .collection('group-logs')\n                  .doc(docRef.id)\n                  .collection('logs')\n                  .add({\n                    text: `The group has been created by ${\n                      user.toJSON().email\n                    }.`,\n                    createdAt: new Date().toString(),\n                  });\n              })\n              .then(navigation.navigate('Home'));\n          },\n          (error) => {\n            alert(error);\n          }\n        );\n    }\n  }\n  return (\n    <View style={styles.rootContainer}>\n      <View style={styles.innerContainer}>\n        <Title>Create a new group</Title>\n        <TextInput\n          name=\"Group Name\"\n          value={groupName}\n          onChangeText={(text) => setGroupName(text)}\n          clearButtonMode=\"while-editing\"\n        />\n        <Button\n          mode=\"contained\"\n          style={styles.buttonContainer}\n          onPress={() => handleButtonPress()}\n          disabled={groupName.length === 0}\n        >\n          Create\n        </Button>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    marginTop: 5,\n  },\n  innerContainer: {\n    justifyContent: 'center',\n    width: 500,\n  },\n  rootContainer: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}