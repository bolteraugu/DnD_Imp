{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\August Bolter\\\\WebstormProjects\\\\DnDProject\\\\src\\\\components\\\\Chat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { AuthUserContext } from \"../navigation/AuthUserProvider\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { IconButton, Button, Portal, Dialog, Provider, TextInput } from 'react-native-paper';\nimport { GiftedChat, Bubble, Send } from 'react-native-gifted-chat';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nexport default function Chat(_ref) {\n  var groupRef = _ref.groupRef;\n  useEffect(function () {\n    groupRef.get().then(function (group) {\n      var members = group.data().members;\n      setRecipients(members);\n      setMembers(members);\n    }, function (error) {\n      alert(error);\n    });\n  }, []);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recipients = _useState2[0],\n      setRecipients = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      members = _useState4[0],\n      setMembers = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDialog = function showDialog() {\n    return setVisible(true);\n  };\n\n  var hideDialog = function hideDialog() {\n    return setVisible(false);\n  };\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputVal = _useState8[0],\n      setInputVal = _useState8[1];\n\n  var _useContext = useContext(AuthUserContext),\n      user = _useContext.user;\n\n  var currentUser = user.toJSON();\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  useEffect(function () {\n    var messagesListener = groupRef.collection('messages').where('recipients', 'array-contains', user.toJSON().email).orderBy('createdAt', 'desc').onSnapshot(function (querySnapshot) {\n      var messages = querySnapshot.docs.map(function (doc) {\n        var firebaseData = doc.data();\n\n        var data = _objectSpread({\n          _id: doc.id,\n          text: '',\n          createdAt: new Date().getTime()\n        }, firebaseData);\n\n        if (!firebaseData.system) {\n          data.user = _objectSpread(_objectSpread({}, firebaseData.user), {}, {\n            name: firebaseData.user.email\n          });\n        }\n\n        return data;\n      });\n      setMessages(messages);\n\n      if (loading) {\n        setLoading(false);\n      }\n    }, function (error) {\n      alert(error);\n    });\n    return messagesListener;\n  }, []);\n\n  function handleSend(messages) {\n    var text = messages[0].text;\n    groupRef.collection('messages').add({\n      text: text,\n      createdAt: new Date().getTime(),\n      user: {\n        _id: currentUser.uid,\n        email: currentUser.email\n      },\n      recipients: recipients\n    }).then(console.log('Message sent: ' + text), function (error) {\n      alert(error);\n    });\n  }\n\n  function renderBubble(props) {\n    return React.createElement(Bubble, _extends({}, props, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: '#6646ee'\n        }\n      },\n      textStyle: {\n        right: {\n          color: '#fff'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  function renderSend(props) {\n    return React.createElement(Send, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }), React.createElement(View, {\n      style: styles.sendingContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, React.createElement(IconButton, {\n      icon: \"send\",\n      size: 32,\n      color: \"#6646ee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function renderLoading() {\n    return React.createElement(View, {\n      style: styles.loadingContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#6646ee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.chatContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.recipientsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(DropDownPicker, {\n    placeholder: \"Select Recipients\",\n    multipleText: \"%d recipients\",\n    items: members.map(function (member) {\n      return {\n        label: member,\n        value: member\n      };\n    }),\n    defaultValue: members,\n    multiple: true,\n    min: 0,\n    max: 10,\n    containerStyle: styles.dropDownContainer,\n    itemStyle: styles.dropDownItem,\n    onChangeItem: function onChangeItem(item) {\n      return setRecipients(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), React.createElement(IconButton, {\n    icon: \"account-multiple-plus\",\n    size: 28,\n    color: \"#000\",\n    onPress: showDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), React.createElement(Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, React.createElement(Dialog, {\n    visible: visible,\n    onDismiss: hideDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, React.createElement(Dialog.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Add a User to the Group\"), React.createElement(Dialog.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputVal(text);\n    },\n    label: \"User's Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  })), React.createElement(Dialog.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      groupRef.update({\n        members: firebase.firestore.FieldValue.arrayUnion(inputVal),\n        numMembers: firebase.firestore.FieldValue.increment(1)\n      }).then(function () {\n        hideDialog();\n        setRecipients([].concat(_toConsumableArray(recipients), [inputVal]));\n        setMembers([].concat(_toConsumableArray(members), [inputVal]));\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Add\"), React.createElement(Button, {\n    onPress: hideDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"Cancel\"))))), React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: handleSend,\n    user: {\n      _id: currentUser.uid\n    },\n    renderBubble: renderBubble,\n    placeholder: \"Type your message here...\",\n    showUserAvatar: true,\n    renderSend: renderSend,\n    renderLoading: renderLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  chatContainer: {\n    flex: 1\n  },\n  dropDownContainer: {\n    flex: 1\n  },\n  dropDownItem: {\n    justifyContent: 'flex-start'\n  },\n  loadingContainer: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  recipientsContainer: _objectSpread({\n    flexDirection: 'row'\n  }, Platform.OS !== 'android' && {\n    zIndex: 10\n  })\n});","map":{"version":3,"sources":["C:/Users/August Bolter/WebstormProjects/DnDProject/src/components/Chat.js"],"names":["React","useState","useEffect","useContext","DropDownPicker","AuthUserContext","IconButton","Button","Portal","Dialog","Provider","TextInput","GiftedChat","Bubble","Send","firebase","Chat","groupRef","get","then","group","members","data","setRecipients","setMembers","error","alert","recipients","loading","setLoading","visible","setVisible","showDialog","hideDialog","inputVal","setInputVal","user","currentUser","toJSON","messages","setMessages","messagesListener","collection","where","email","orderBy","onSnapshot","querySnapshot","docs","map","doc","firebaseData","_id","id","text","createdAt","Date","getTime","system","name","handleSend","add","uid","console","log","renderBubble","props","right","backgroundColor","color","renderSend","styles","sendingContainer","renderLoading","loadingContainer","chatContainer","recipientsContainer","member","label","value","dropDownContainer","dropDownItem","item","update","firestore","FieldValue","arrayUnion","numMembers","increment","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","Platform","OS","zIndex"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport {AuthUserContext} from '../navigation/AuthUserProvider';\nimport {ActivityIndicator, StyleSheet, View, Platform} from 'react-native';\nimport {\n  IconButton,\n  Button,\n  Portal,\n  Dialog,\n  Provider,\n  TextInput,\n} from 'react-native-paper';\nimport {GiftedChat, Bubble, Send} from 'react-native-gifted-chat';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\nexport default function Chat({groupRef}) {\n  useEffect(() => {\n    groupRef.get().then(\n      (group) => {\n        const members = group.data().members;\n        setRecipients(members);\n        setMembers(members);\n      },\n      (error) => {\n        alert(error);\n      }\n    );\n  }, []);\n\n  // eslint-disable-next-line no-unused-vars\n  const [recipients, setRecipients] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const [visible, setVisible] = React.useState(false);\n  const showDialog = () => setVisible(true);\n  const hideDialog = () => setVisible(false);\n  const [inputVal, setInputVal] = useState('');\n\n  const {user} = useContext(AuthUserContext);\n  const currentUser = user.toJSON();\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const messagesListener = groupRef\n      .collection('messages')\n      .where('recipients', 'array-contains', user.toJSON().email)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(\n        (querySnapshot) => {\n          const messages = querySnapshot.docs.map((doc) => {\n            const firebaseData = doc.data();\n\n            const data = {\n              _id: doc.id,\n              text: '',\n              createdAt: new Date().getTime(),\n              ...firebaseData,\n            };\n\n            if (!firebaseData.system) {\n              data.user = {\n                ...firebaseData.user,\n                name: firebaseData.user.email,\n              };\n            }\n\n            return data;\n          });\n\n          setMessages(messages);\n          if (loading) {\n            setLoading(false);\n          }\n        },\n        (error) => {\n          alert(error);\n        }\n      );\n\n    return messagesListener;\n  }, []);\n\n  function handleSend(messages) {\n    const text = messages[0].text;\n\n    groupRef\n      .collection('messages')\n      .add({\n        text,\n        createdAt: new Date().getTime(),\n        user: {\n          _id: currentUser.uid,\n          email: currentUser.email,\n        },\n        recipients: recipients,\n      })\n      .then(console.log('Message sent: ' + text), (error) => {\n        alert(error);\n      });\n  }\n\n  function renderBubble(props) {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#6646ee',\n          },\n        }}\n        textStyle={{\n          right: {\n            color: '#fff',\n          },\n        }}\n      />\n    );\n  }\n\n  function renderSend(props) {\n    return (\n      <Send {...props}>\n        <View style={styles.sendingContainer}>\n          <IconButton icon=\"send\" size={32} color=\"#6646ee\" />\n        </View>\n      </Send>\n    );\n  }\n\n  function renderLoading() {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#6646ee\" />\n      </View>\n    );\n  }\n\n  return (\n    <Provider>\n      <View style={styles.chatContainer}>\n        <View style={styles.recipientsContainer}>\n          <DropDownPicker\n            placeholder=\"Select Recipients\"\n            multipleText=\"%d recipients\"\n            items={members.map((member) => {\n              return {\n                label: member,\n                value: member,\n              };\n            })}\n            defaultValue={members}\n            multiple={true}\n            min={0}\n            max={10}\n            containerStyle={styles.dropDownContainer}\n            itemStyle={styles.dropDownItem}\n            onChangeItem={(item) => setRecipients(item)}\n          />\n          <IconButton\n            icon=\"account-multiple-plus\"\n            size={28}\n            color=\"#000\"\n            onPress={showDialog}\n          />\n          <Portal>\n            <Dialog visible={visible} onDismiss={hideDialog}>\n              <Dialog.Title>Add a User to the Group</Dialog.Title>\n              <Dialog.Content>\n                <TextInput\n                  onChangeText={(text) => setInputVal(text)}\n                  label=\"User's Email\"\n                />\n              </Dialog.Content>\n              <Dialog.Actions>\n                <Button\n                  onPress={() => {\n                    groupRef\n                      .update({\n                        members:\n                          firebase.firestore.FieldValue.arrayUnion(inputVal),\n                        numMembers: firebase.firestore.FieldValue.increment(1),\n                      })\n                      .then(() => {\n                        hideDialog();\n                        setRecipients([...recipients, inputVal]);\n                        setMembers([...members, inputVal]);\n                      });\n                  }}\n                >\n                  Add\n                </Button>\n                <Button onPress={hideDialog}>Cancel</Button>\n              </Dialog.Actions>\n            </Dialog>\n          </Portal>\n        </View>\n        <GiftedChat\n          messages={messages}\n          onSend={handleSend}\n          user={{_id: currentUser.uid}}\n          renderBubble={renderBubble}\n          placeholder=\"Type your message here...\"\n          showUserAvatar\n          renderSend={renderSend}\n          renderLoading={renderLoading}\n        />\n      </View>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chatContainer: {\n    // backgroundColor: \"#FFF\",\n    flex: 1,\n  },\n  dropDownContainer: {\n    flex: 1,\n  },\n  dropDownItem: {\n    justifyContent: 'flex-start',\n  },\n  loadingContainer: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  recipientsContainer: {\n    flexDirection: 'row',\n    ...(Platform.OS !== 'android' && {\n      zIndex: 10,\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}